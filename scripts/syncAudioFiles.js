// scripts/syncAudioFiles.js - –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∞—É–¥–∏–æ —Ñ–∞–π–ª–æ–≤
const fs = require('fs');
const path = require('path');

const AUDIO_DIR = path.join(__dirname, '../assets/audio');
const AUDIO_MAPPING_PATH = path.join(__dirname, '../src/data/audioMapping.ts');

console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –∞—É–¥–∏–æ —Ñ–∞–π–ª–æ–≤...');
console.log('==================================================\n');

// –ú–∞–ø–ø–∏–Ω–≥ —Å—Ç–∞—Ä—ã—Ö ID –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–∞ –Ω–æ–≤—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –ø–∞–ø–æ–∫
const CATEGORY_MAPPING = {
  'greetings': 'greetings',
  'emergency': 'emergency',
  'hotel': 'hotel',
  'food': 'food',
  'shopping': 'shopping',
  'transport': 'transport',
  'directions': 'directions',
  'health': 'health',
  'money': 'money',
  'communication': 'communication',
  'entertainment': 'entertainment',
  'time': 'time',
  'numbers': 'numbers',
  'weather': 'weather',
  'personal_info': 'personal_info',
  'business': 'business',
  'measurements': 'measurements',
  'colors': 'colors',
  'body': 'body',
  'home': 'home',
  'customs': 'customs',
  'sport': 'sport'
};

// –°–∫–∞–Ω–∏—Ä—É–µ–º –≤—Å–µ –ø–∞–ø–∫–∏ –≤ assets/audio/
console.log('üìÇ –°–∫–∞–Ω–∏—Ä—É–µ–º –∞—É–¥–∏–æ —Ñ–∞–π–ª—ã...\n');

const audioFiles = {};
let totalFiles = 0;

// –ß–∏—Ç–∞–µ–º –≤—Å–µ –ø–∞–ø–∫–∏ –≤ audio
const folders = fs.readdirSync(AUDIO_DIR).filter(item => {
  return fs.statSync(path.join(AUDIO_DIR, item)).isDirectory();
});

console.log(`–ù–∞–π–¥–µ–Ω–æ –ø–∞–ø–æ–∫: ${folders.length}\n`);

folders.forEach(folder => {
  const folderPath = path.join(AUDIO_DIR, folder);
  const turkmenPath = path.join(folderPath, 'turkmen');
  
  if (fs.existsSync(turkmenPath)) {
    const files = fs.readdirSync(turkmenPath)
      .filter(file => file.endsWith('.mp3'))
      .sort();
    
    if (files.length > 0) {
      console.log(`‚úÖ ${folder}: ${files.length} —Ñ–∞–π–ª–æ–≤`);
      
      files.forEach(file => {
        const key = `${folder}/turkmen/${file}`;
        const requirePath = `../../assets/audio/${folder}/turkmen/${file}`;
        audioFiles[key] = requirePath;
        totalFiles++;
      });
    } else {
      console.log(`‚ö†Ô∏è  ${folder}: turkmen –ø–∞–ø–∫–∞ –ø—É—Å—Ç–∞`);
    }
  } else {
    console.log(`‚ö†Ô∏è  ${folder}: –Ω–µ—Ç turkmen –ø–æ–¥–ø–∞–ø–∫–∏`);
  }
});

console.log(`\nüìä –í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ: ${totalFiles} MP3 —Ñ–∞–π–ª–æ–≤\n`);

// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º audioMapping.ts
console.log('üìù –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º audioMapping.ts...');

const audioMappingContent = `// AUTO-GENERATED FILE - DO NOT EDIT MANUALLY
// Generated by scripts/syncAudioFiles.js
// Last updated: ${new Date().toISOString()}

/**
 * Audio file mapping for Turkmen audio files
 * Maps audio keys to require() statements for proper bundling
 */
const TURKMEN_AUDIO: Record<string, any> = {
${Object.entries(audioFiles)
  .map(([key, requirePath]) => `  '${key}': require('${requirePath}'),`)
  .join('\n')}
};

export default TURKMEN_AUDIO;
`;

fs.writeFileSync(AUDIO_MAPPING_PATH, audioMappingContent, 'utf8');
console.log(`‚úÖ –°–æ–∑–¥–∞–Ω audioMapping.ts —Å ${totalFiles} —Ñ–∞–π–ª–∞–º–∏\n`);

console.log('==================================================');
console.log('‚úÖ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!\n');
console.log('–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ src/data/audioMapping.ts');
console.log('2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –ø—É—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ');
console.log('3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: npx expo start');
console.log('4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∞—É–¥–∏–æ\n');