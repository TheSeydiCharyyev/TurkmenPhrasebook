// scripts/renameAudioFolders.js
const fs = require('fs');
const path = require('path');

const AUDIO_DIR = path.join(__dirname, '../assets/audio');

console.log('üîÑ –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∞—É–¥–∏–æ –ø–∞–ø–æ–∫...\n');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –∏–º–µ–Ω–∏ (—É–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã –∏ —Ç–æ—á–∫–∏)
function sanitizeName(name) {
  return name
    .replace(/^\d+\.\s+/, '') // –£–±–∏—Ä–∞–µ–º "1. " –≤ –Ω–∞—á–∞–ª–µ
    .replace(/\s+/g, '_')     // –ü—Ä–æ–±–µ–ª—ã –≤ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è
    .toLowerCase();           // –í –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä
}

// –ß–∏—Ç–∞–µ–º –ø–∞–ø–∫–∏ –≤ audio/
const folders = fs.readdirSync(AUDIO_DIR).filter(item => {
  return fs.statSync(path.join(AUDIO_DIR, item)).isDirectory();
});

console.log(`üìÅ –ù–∞–π–¥–µ–Ω–æ –ø–∞–ø–æ–∫: ${folders.length}\n`);

let renamed = 0;

folders.forEach(folder => {
  const oldPath = path.join(AUDIO_DIR, folder);
  const newName = sanitizeName(folder);
  const newPath = path.join(AUDIO_DIR, newName);
  
  if (folder !== newName) {
    try {
      fs.renameSync(oldPath, newPath);
      console.log(`‚úÖ ${folder} ‚Üí ${newName}`);
      renamed++;
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–∏ ${folder}:`, error.message);
    }
  } else {
    console.log(`‚è≠Ô∏è  ${folder} - —É–∂–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è`);
  }
});

console.log(`\n‚ú® –ì–æ—Ç–æ–≤–æ! –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–æ: ${renamed} –ø–∞–ø–æ–∫\n`);
console.log('üîÑ –¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å—Ç–∏: node scripts/syncAudioFiles.js');