// scripts/importTranslations.js
// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—ã–µ —Ñ—Ä–∞–∑—ã –∏–∑ JSON –≤ english.ts
const fs = require('fs');
const path = require('path');

console.log('üì• –ò–º–ø–æ—Ä—Ç –∞–Ω–≥–ª–∏–π—Å–∫–∏—Ö –ø–µ—Ä–µ–≤–æ–¥–æ–≤...\n');

// –ß–∏—Ç–∞–µ–º JSON —Å –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏
const jsonPath = path.join(__dirname, 'translations_russian_to_english.json');

if (!fs.existsSync(jsonPath)) {
  console.error('‚ùå –§–∞–π–ª translations_russian_to_english.json –Ω–µ –Ω–∞–π–¥–µ–Ω!');
  console.log('   –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: node scripts/exportForTranslation.js\n');
  process.exit(1);
}

const translationData = JSON.parse(fs.readFileSync(jsonPath, 'utf8'));

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–µ—Ä–µ–≤–æ–¥—ã –∑–∞–ø–æ–ª–Ω–µ–Ω—ã
const emptyCount = translationData.phrases.filter(p => !p.english || p.english === '').length;

if (emptyCount > 0) {
  console.warn(`‚ö†Ô∏è  –í–Ω–∏–º–∞–Ω–∏–µ: ${emptyCount} —Ñ—Ä–∞–∑ –Ω–µ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω—ã (–ø—É—Å—Ç–æ–µ –ø–æ–ª–µ 'english')`);
  console.log(`   –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –∏–º–ø–æ—Ä—Ç, –Ω–æ —ç—Ç–∏ —Ñ—Ä–∞–∑—ã –±—É–¥—É—Ç –ø–æ–º–µ—á–µ–Ω—ã –∫–∞–∫ [NOT TRANSLATED]\n`);
}

// –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –ø–µ—Ä–µ–≤–æ–¥–æ–≤
const englishTranslations = translationData.phrases.map(phrase => ({
  phraseId: phrase.id,
  text: phrase.english || `[NOT TRANSLATED: ${phrase.russian}]`,
  transcription: undefined
}));

// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
const fileContent = `// AUTO-GENERATED: –ê–Ω–≥–ª–∏–π—Å–∫–∏–µ –ø–µ—Ä–µ–≤–æ–¥—ã
// Generated: ${new Date().toISOString()}
// Total translations: ${englishTranslations.length}
import { LanguageTranslation } from '../../../types';

export const englishTranslations: LanguageTranslation[] = [
${englishTranslations.map(t => `  {
    phraseId: "${t.phraseId}",
    text: "${t.text.replace(/"/g, '\\"')}",
    transcription: undefined
  }`).join(',\n')}
];
`;

// –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
const outputPath = path.join(__dirname, '../src/data/languages/translations/english.ts');
fs.writeFileSync(outputPath, fileContent, 'utf8');

console.log(`‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: ${outputPath}`);
console.log(`üìä –í—Å–µ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–æ–≤: ${englishTranslations.length}`);

// –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
const translatedCount = englishTranslations.filter(t => !t.text.startsWith('[NOT TRANSLATED')).length;
const notTranslatedCount = englishTranslations.length - translatedCount;

console.log(`\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`);
console.log(`  ‚úÖ –ü–µ—Ä–µ–≤–µ–¥–µ–Ω–æ: ${translatedCount}`);
console.log(`  ‚ùå –ù–µ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–æ: ${notTranslatedCount}\n`);

if (translatedCount === englishTranslations.length) {
  console.log(`üéâ –í—Å–µ —Ñ—Ä–∞–∑—ã —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω—ã!\n`);
}
