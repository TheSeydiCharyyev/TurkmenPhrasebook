// src/screens/LanguageSelectionScreen.tsx
import React from 'react';
import {
  View,
  Text,
  StyleSheet,
  TouchableOpacity,
  Dimensions,
  Alert,
  Image,
  ScrollView,
} from 'react-native';
import { AppLanguageMode } from '../hooks/useAppLanguage';
import { Colors } from '../constants/Colors';
import { Ionicons } from '@expo/vector-icons';
import Screen from '../components/Screen';

const { width, height } = Dimensions.get('window');

interface Props {
  onLanguageSelect: (language: AppLanguageMode, shouldSave: boolean) => void;
}

export default function LanguageSelectionScreen({ onLanguageSelect }: Props) {
  
  const handleLanguageSelect = (language: AppLanguageMode) => {
    onLanguageSelect(language, false);
    
    const languageName = language === 'tk' ? 'T√ºrkmen√ße' : '‰∏≠Êñá';
    const question = language === 'tk' 
      ? `Bu dili esasy edip saklamalymi?\n\n‚úÖ Hawa - mundan so≈à bu dilde a√ßylar\n‚ùå √ùok - di≈àe ≈üu gezek ulanarys`
      : `Â∞ÜÊ≠§ËØ≠Ë®Ä‰øùÂ≠ò‰∏∫ÈªòËÆ§ËØ≠Ë®ÄÔºü\n\n‚úÖ ÊòØ - ‰ª•ÂêéÊÄªÊòØ‰ΩøÁî®Ê≠§ËØ≠Ë®ÄÊâìÂºÄ\n‚ùå Âê¶ - ‰ªÖÊú¨Ê¨°‰ΩøÁî®`;
    
    setTimeout(() => {
      Alert.alert(
        'üíæ ' + languageName,
        question,
        [
          { 
            text: language === 'tk' ? '‚ùå √ùok' : '‚ùå Âê¶', 
            style: 'cancel',
            onPress: () => showSettingsInfo(language)
          },
          {
            text: language === 'tk' ? '‚úÖ Hawa' : '‚úÖ ÊòØ',
            onPress: () => {
              onLanguageSelect(language, true);
              showSettingsInfo(language);
            }
          }
        ]
      );
    }, 500);
  };

  const showSettingsInfo = (language: AppLanguageMode) => {
    const message = language === 'tk'
      ? '‚öôÔ∏è Dili √º√Ωtgetmek √º√ßin Sazlamalara giri≈à'
      : '‚öôÔ∏è ÂèØÂú®ËÆæÁΩÆ‰∏≠Êõ¥ÊîπËØ≠Ë®Ä';
    
    setTimeout(() => {
      Alert.alert('üí°', message, [
        { text: language === 'tk' ? '‚úÖ D√º≈ü√ºndim' : '‚úÖ ÊòéÁôΩ‰∫Ü' }
      ]);
    }, 800);
  };

  return (
    <Screen backgroundColor="#FFFFFF">
      <ScrollView
        contentContainerStyle={styles.scrollContent}
        showsVerticalScrollIndicator={false}
      >
          {/* –§–û–¢–û –í–í–ï–†–•–£ */}
          <View style={styles.imageContainer}>
            <Image
              source={require('../../assets/language-background.png')}
              style={styles.heroImage}
              resizeMode="contain"
            />
          </View>

          {/* –ó–ê–ì–û–õ–û–í–û–ö */}
          <View style={styles.header}>
            <Text style={styles.title}>ÈÄâÊã©ËØ≠Ë®ÄÁïåÈù¢ / Dil interfe√Ωsi sa√Ωla≈à</Text>
          </View>

          {/* –î–í–ï –ö–ù–û–ü–ö–ò –í–´–ë–û–†–ê –Ø–ó–´–ö–ê */}
          <View style={styles.buttonsContainer}>
            {/* –¢—É—Ä–∫–º–µ–Ω—Å–∫–∏–π */}
            <TouchableOpacity
              style={styles.languageButton}
              onPress={() => handleLanguageSelect('tk')}
              activeOpacity={0.7}
            >
              <View style={styles.buttonContent}>
                <Text style={styles.flag}>üáπüá≤</Text>
                <View style={styles.languageInfo}>
                  <Text style={styles.languageName}>T√ºrkmen√ße</Text>
                  <Text style={styles.languageDescription}>–¢—É—Ä–∫–º–µ–Ω—Å–∫–∏–π —è–∑—ã–∫</Text>
                </View>
                <Ionicons name="chevron-forward" size={24} color={Colors.primary} />
              </View>
            </TouchableOpacity>

            {/* –ö–∏—Ç–∞–π—Å–∫–∏–π */}
            <TouchableOpacity
              style={styles.languageButton}
              onPress={() => handleLanguageSelect('zh')}
              activeOpacity={0.7}
            >
              <View style={styles.buttonContent}>
                <Text style={styles.flag}>üá®üá≥</Text>
                <View style={styles.languageInfo}>
                  <Text style={styles.languageName}>‰∏≠Êñá</Text>
                  <Text style={styles.languageDescription}>–ö–∏—Ç–∞–π—Å–∫–∏–π —è–∑—ã–∫</Text>
                </View>
                <Ionicons name="chevron-forward" size={24} color={Colors.primary} />
              </View>
            </TouchableOpacity>
          </View>

          {/* –ü–û–î–°–ö–ê–ó–ö–ê –í–ù–ò–ó–£ - –¢–†–ò –Ø–ó–´–ö–ê */}
          <View style={styles.footer}>
            <Ionicons name="information-circle-outline" size={18} color={Colors.textLight} />
            <View style={styles.footerTexts}>
              <Text style={styles.footerText}>ÊÇ®ÂèØ‰ª•ÈöèÊó∂Âú®ËÆæÁΩÆ‰∏≠Êõ¥ÊîπËØ≠Ë®Ä</Text>
              <Text style={styles.footerText}>Dili islendik wagty≈à Sazlamalarda √º√Ωtgedip bilersi≈àiz</Text>
              <Text style={styles.footerText}>–í—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö</Text>
            </View>
          </View>
        </ScrollView>
    </Screen>
  );
}

const styles = StyleSheet.create({
  scrollContent: {
    flexGrow: 1,
    paddingBottom: 20,
  },
  
  // –§–û–¢–û –í–í–ï–†–•–£
  imageContainer: {
    width: width,
    height: height * 0.35, // 35% –≤—ã—Å–æ—Ç—ã —ç–∫—Ä–∞–Ω–∞
    alignItems: 'center',
    justifyContent: 'center',
    backgroundColor: '#F0F9FF',
    marginBottom: 20,
  },
  heroImage: {
    width: width * 0.9,
    height: '100%',
  },

  // –ó–ê–ì–û–õ–û–í–û–ö
  header: {
    alignItems: 'center',
    paddingHorizontal: 20,
    marginBottom: 50, // –£–≤–µ–ª–∏—á–∏–ª –æ—Ç—Å—Ç—É–ø —Å–Ω–∏–∑—É
  },
  title: {
    fontSize: 28,
    fontWeight: '700',
    color: Colors.text,
    textAlign: 'center',
  },
  subtitle: {
    fontSize: 15,
    color: Colors.textSecondary,
    textAlign: 'center',
  },

  // –ö–ù–û–ü–ö–ò
  buttonsContainer: {
    paddingHorizontal: 24,
    gap: 16,
    marginBottom: 24,
    marginTop: 20, // –î–æ–±–∞–≤–∏–ª –æ—Ç—Å—Ç—É–ø —Å–≤–µ—Ä—Ö—É
  },
  languageButton: {
    backgroundColor: '#FFFFFF',
    borderRadius: 16,
    borderWidth: 2,
    borderColor: '#E5E7EB',
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 3,
  },
  buttonContent: {
    flexDirection: 'row',
    alignItems: 'center',
    padding: 20,
  },
  flag: {
    fontSize: 40,
    marginRight: 16,
  },
  languageInfo: {
    flex: 1,
  },
  languageName: {
    fontSize: 22,
    fontWeight: '700',
    color: Colors.text,
    marginBottom: 4,
  },
  languageDescription: {
    fontSize: 14,
    color: Colors.textSecondary,
    fontWeight: '500',
  },

  // –ü–û–î–°–ö–ê–ó–ö–ê –í–ù–ò–ó–£
  footer: {
    flexDirection: 'row',
    alignItems: 'flex-start',
    justifyContent: 'center',
    paddingHorizontal: 24,
    gap: 12,
    marginTop: 'auto',
    paddingTop: 20,
  },
  footerTexts: {
    flex: 1,
    gap: 4,
  },
  footerText: {
    fontSize: 12,
    color: Colors.textLight,
    textAlign: 'left',
    lineHeight: 18,
  },
});